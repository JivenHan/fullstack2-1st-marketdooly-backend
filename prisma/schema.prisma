datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {

  id                             Int       @id @default(autoincrement())
  account                        String    @db.VarChar(50)
  name                           String    @db.VarChar(20)
  password                       String    @db.VarChar(100)
  phoneNumber                    String    @map("phone_number") @db.VarChar(15)
  address                        String    @db.VarChar(100)
  gender                         String?   @db.VarChar(20)
  birthday                       DateTime? @db.Date
  createdAt                      DateTime  @map("created_at") @db.Timestamp
  mandatoryPolicyAgreed          Boolean   @map("mandatory_policy_agreed") @db.TinyInt
  personalInfomationPolicyAgreed Boolean?  @map("personal_information_policy_agreed") @db.TinyInt
  marketingPolicyAgreed          Boolean?  @map("marketing_policy_agreed") @db.TinyInt
  cartId                         Int       @map("cart_id")
  cart                           Cart      @relation("cartId", fields: [cartId], references: [id])
  Cart                           Cart[]
  Order                          Order[]
  Review                         Review[]
  @@map("users")
}

model Cart {
  id            Int              @id @default(autoincrement())
  userId        Int              @map("user_id")
  userAddress   String           @map("address") @db.VarChar(100)
  user          User             @relation(fields: [userId, userAddress], references: [id, address])
  nameKorean    String           @map("name_korean") @db.VarChar(40)
  thumbUrl      String           @map("thumb_url") @db.VarChar(2000)
  salesPrice    Int              @map("sales_price")
  originalPrice Int              @map("original_price")
  earnPoint     Int              @map("earn_point")
  product       ProductDetail    @relation(fields: [nameKorean, thumbUrl, salesPrice, originalPrice, earnPoint], references: [nameKorean, thumbUrl, salesPrice, originalPrice, earnPoint])
  storageType   String           @map("storage_type")
  storageTemp   StorageTemporary @relation(fields: [storageType], references: [storageType])
  quantity      Int

  Order Order[]
  User  User[]  @relation("cartId")
  @@map("carts")
}

model StorageTemporary {
  id          Int    @id @default(autoincrement())
  storageType String

  Cart          Cart[]
  Order         Order[]
  ProductDetail ProductDetail[]
  @@map("storage_temporarys")
}

model Order {
  id            Int              @id @default(autoincrement())
  cartId        Int              @map("cart_id")
  cart          Cart             @relation(fields: [cartId], references: [id])
  userId        Int              @map("user_id")
  userAddress   String           @map("address") @db.VarChar(100)
  user          User             @relation(fields: [userId, userAddress], references: [id, address])
  nameKorean    String           @map("name_korean") @db.VarChar(40)
  thumbUrl      String           @map("thumb_url") @db.VarChar(2000)
  salesPrice    Int              @map("sales_price")
  originalPrice Int              @map("original_price")
  earnPoint     Int              @map("earn_point")
  product       ProductDetail    @relation(fields: [nameKorean, thumbUrl, salesPrice, originalPrice, earnPoint], references: [nameKorean, thumbUrl, salesPrice, originalPrice, earnPoint])
  storageTemp   String           @map("storage_temp")
  storageType   StorageTemporary @relation(fields: [storageTemp], references: [storageType])
  quantity      Int

  @@map("orders")
}

model Product {
  id                      Int                       @id @default(autoincrement())
  nameKorean              String                    @map("name_korean") @db.VarChar(40)
  shortDescription        String                    @map("short_description") @db.VarChar(200)
  originalPrice           Int                       @map("original_price")
  discountRate            Int                       @map("discount_rate")
  salesPrice              Int                       @map("sales_price")
  ProductDetail           ProductDetail[]
  AdditionalInformation   AdditionalInformation[]
  DescriptionIntroduction DescriptionIntroduction[]
  DescriptionInformation  DescriptionInformation[]

  @@map("products")
}

model ProductDetail {
  id               Int              @id @default(autoincrement())
  earnPoint        Int              @map("earn_point")
  saleUnit         String           @map("sale_unit") @db.VarChar(10)
  weightOrCapacity String?          @map("weight_or_capacity") @db.VarChar(20)
  deliveryType     String           @map("delivery_type") @db.VarChar(20)
  originCountry    String?          @map("origin_country") @db.VarChar(10)
  packageType      String           @map("package_type") @db.VarChar(20)
  packageMessage   String?          @map("package_message") @db.VarChar(400)
  notification     String?          @map("notification") @db.VarChar(400)
  allergenInfo     String?          @map("allergen_information") @db.VarChar(200)
  thumbUrl         String           @map("thumb_url") @db.VarChar(2000)
  storageType      String           @map("storage_type")
  storageTemporary StorageTemporary @relation(fields: [storageType], references: [storageType])
  product          Product          @relation(fields: [productId], references: [id])
  productId        Int              @map("products_id")
  Cart             Cart[]
  Order            Order[]

  @@map("products_details")
}

model AdditionalInformation {
  id                    Int     @id @default(autoincrement())
  additionalInformation String? @map("additional_information") @db.VarChar(2000)
  product               Product @relation(fields: [productId], references: [id])
  productId             Int     @map("products_id")

  @@map("additional_informations")
}

model DescriptionIntroduction {
  id                  Int     @id @default(autoincrement())
  introductionImage   String  @map("introductions_image") @db.VarChar(2000)
  introductionTitle   String  @map("introductions_title") @db.VarChar(30)
  introductionName    String  @map("introductions_name") @db.VarChar(20)
  introductionArticle String  @map("introductions_article") @db.VarChar(1000)
  product             Product @relation(fields: [productId], references: [id])
  productId           Int     @map("products_id")

  @@map("descriptions_introductions")
}

model DescriptionInformation {
  id                Int     @id @default(autoincrement())
  information_image String  @db.VarChar(2000)
  product_name      String  @db.VarChar(20)
  certification     String? @db.VarChar(20)
  packaging_unit    String? @db.VarChar(20)
  matter_note       String? @db.VarChar(100)
  producer          String  @db.VarChar(100)
  how_to_store      String? @db.VarChar(100)
  origin_country    String? @db.VarChar(20)
  service_call      String? @db.VarChar(40)
  produce_date      String  @db.VarChar(100)
  product           Product @relation(fields: [productId], references: [id])
  productId         Int     @map("products_id")

  @@map("descriptions_informations")
}

model ReviewOnLike {
  reviewId Int
  userId   Int

  @@id([reviewId, userId])
  @@map("reviews_likes")
}
