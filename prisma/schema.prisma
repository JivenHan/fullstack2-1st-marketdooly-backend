datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                             Int       @id @default(autoincrement())
  account                        String    @unique @db.VarChar(50)
  email                          String    @unique @db.VarChar(100)
  name                           String    @db.VarChar(20)
  password                       String    @db.VarChar(200)
  phoneNumber                    String    @map("phone_number") @db.VarChar(15)
  address                        String    @db.VarChar(100)
  gender                         String?   @db.VarChar(20)
  birthday                       DateTime? @db.Date
  createdAt                      DateTime  @default(now()) @map("created_at")
  mandatoryPolicyAgreed          Boolean   @map("mandatory_policy_agreed") @db.TinyInt
  personalInfomationPolicyAgreed Boolean   @default(false) @map("personal_information_policy_agreed") @db.TinyInt
  marketingPolicyAgreed          Boolean   @default(false) @map("marketing_policy_agreed") @db.TinyInt

  Cart   Cart[]
  Review Review[]
  @@map("users")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(30)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")

  subCategory   SubCategory[]
  CategoryEvent CategoryEvent[]
  @@map("categories")
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(30)
  categoryId Int       @map("category_id")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime? @map("updated_at")

  category Category  @relation(fields: [categoryId], references: [id])
  product  Product[]
  @@map("sub_categories")
}

model Product {
  id                   Int       @id @default(autoincrement())
  name                 String    @map("name") @db.VarChar(100)
  summary              String    @map("summary") @db.VarChar(200)
  storageTemperatureId Int       @map("storage_temperature_id")
  salesPrice           Int?      @map("sales_price")
  discountRate         Int?      @map("discount_rate")
  originalPrice        Int       @map("original_price")
  earnPoint            Int?      @map("earn_points")
  specialFeature       String?   @map("special_features") @db.VarChar(20)
  subCategoryId        Int       @map("sub_category_id")
  salesUnit            String?   @map("sales_unit") @db.VarChar(10)
  weightOrCapacity     String?   @map("weight_or_capacity") @db.VarChar(20)
  createdAt            DateTime  @default(now()) @map("created_at")
  updatedAt            DateTime? @map("updated_at")
  deliveryType         String    @default("샛별배송/택배배송") @map("delivery_type") @db.VarChar(20)
  originCountry        String?   @map("origin_country") @db.VarChar(20)
  packaging            String?   @map("packaging") @db.VarChar(20)
  packageMessage       String?   @map("package_message") @db.VarChar(400)
  allergenInfo         String?   @map("allergen_information") @db.VarChar(120)
  expiryDate           String?   @map("expiry_date") @db.VarChar(120)
  notice               String?   @map("notice") @db.VarChar(400)

  storageTemperature StorageTemperature @relation(fields: [storageTemperatureId], references: [id])
  subCategory        SubCategory        @relation(fields: [subCategoryId], references: [id])
  Cart               Cart[]
  Image              Image[]
  Event              Event[]

  CategoryEvent CategoryEvent[]
  @@map("products")
  Review Review[]
}

model Image {
  id               Int     @id @default(autoincrement())
  productId        Int     @map("product_id")
  Product          Product @relation(fields: [productId], references: [id])
  productImage     String  @map("product_image") @db.VarChar(2000)
  thumbnailImage   String? @map("thumbnail_image") @db.VarChar(2000)
  descriptionImage String? @map("description_image") @db.VarChar(2000)
  labelingImage    String? @map("labeling_image") @db.VarChar(2000)
  templateImage    String? @map("template_image") @db.VarChar(2000)

  @@map("images")
}

model StorageTemperature {
  id          Int    @id @default(autoincrement())
  storageType String @map("storage_type")

  Product Product[]
  @@map("storage_temperature")
}

model Cart {
  id        Int     @id @default(autoincrement())
  userId    Int     @map("user_id")
  user      User    @relation(fields: [userId], references: [id])
  productId Int     @map("product_id")
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int     @default(1)

  Order Order[]
  @@map("carts")
}

model Order {
  id     Int  @id @default(autoincrement())
  cartId Int  @map("cart_id")
  cart   Cart @relation(fields: [cartId], references: [id])

  @@map("orders")
}

model Review {
  id        Int       @id @default(autoincrement())
  title     String    @db.VarChar(1000)
  text      String    @db.VarChar(3000)
  Product   Product   @relation(fields: [productId], references: [id])
  productId Int       @map("product_id")
  user      User      @relation(fields: [userId], references: [id])
  userId    Int       @map("user_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")

  @@map("reviews")
}

model ReviewOnLike {
  reviewId Int @map("review_id")
  userId   Int @map("user_id")

  @@id([reviewId, userId])
  @@map("reviews_likes")
}

model Banner {
  id           Int      @id @default(autoincrement())
  group        String   @map("group") @db.VarChar(50)
  image        String   @db.VarChar(2000)
  link         String   @db.VarChar(2000)
  type         String?  @db.VarChar(50)
  header       String?  @db.VarChar(50)
  description  String?  @db.VarChar(200)
  displayOrder Int?     @map("display_order")
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("banners")
}

model Event {
  id           Int      @id @default(autoincrement())
  group        String   @map("group") @db.VarChar(50)
  productId    Int      @map("product_id")
  product      Product  @relation(fields: [productId], references: [id])
  type         String?  @db.VarChar(50)
  header       String?  @db.VarChar(50)
  description  String?  @db.VarChar(200)
  displayOrder Int?     @map("display_order")
  createdAt    DateTime @default(now()) @map("created_at")

  CategoryEvent CategoryEvent[]
  @@map("events")
}

model CategoryEvent {
  id         Int      @id @default(autoincrement())
  productId  Int      @map("product_id")
  product    Product  @relation(fields: [productId], references: [id])
  eventId    Int      @map("event_id")
  event      Event    @relation(fields: [eventId], references: [id])
  categoryId Int      @map("category_id")
  category   Category @relation(fields: [categoryId], references: [id])

  @@map("category_event")
}
